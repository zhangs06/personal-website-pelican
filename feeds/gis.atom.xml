<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Spatial Thoughts</title><link href="http://www.spatialthoughts.com/" rel="alternate"></link><link href="http://www.spatialthoughts.com/feeds/gis.atom.xml" rel="self"></link><id>http://www.spatialthoughts.com/</id><updated>2015-10-27T00:00:00+05:30</updated><entry><title>Creating Geospatial PDFs with GDAL Tools</title><link href="http://www.spatialthoughts.com/blog/gis/geopdf-gdal/" rel="alternate"></link><published>2015-10-27T00:00:00+05:30</published><updated>2015-10-27T00:00:00+05:30</updated><author><name>Ujaval Gandhi</name></author><id>tag:www.spatialthoughts.com,2015-10-27:blog/gis/geopdf-gdal/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/GeoPDF"&gt;GeoPDF&lt;/a&gt; is a unique data format that
brings the portability of PDF to geospatial data. A GeoPDF document can present
raster and vector data and preserve the georeference information. This can be a
useful format for non-GIS folks to consume GIS data without needing
GIS-software. While GeoPDF is a proprietary format, we have a close alternative
in the open &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Geospatial_PDF"&gt;Geospatial PDF&lt;/a&gt;
format. GDAL has added support for creating Geospatial PDF documents from
version 1.10 onwards. In this post, I will show how to create a GeoPDF document
containing multiple vector layers.&lt;/p&gt;
&lt;div class="section" id="get-the-tools"&gt;
&lt;h2&gt;Get the Tools&lt;/h2&gt;
&lt;div class="section" id="windows"&gt;
&lt;h3&gt;Windows&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://trac.osgeo.org/osgeo4w/"&gt;OsGeo4W&lt;/a&gt; is the best way to install GDAL on
Windows. The default installation gives your GDAL tools with PDF format support. You
can use the GDAL tools via the OsGeo4W Shell included in the install.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mac"&gt;
&lt;h3&gt;Mac&lt;/h3&gt;
&lt;p&gt;KyngChaos providers a convenient &lt;a class="reference external" href="http://www.kyngchaos.com/software/frameworks#gdal_complete"&gt;GDAL installer&lt;/a&gt; for Mac. You
also need to install the additional &lt;a class="reference external" href="http://www.kyngchaos.com/files/software/frameworks/GDAL-GeoPDF_Plugin-1.11.3-1.dmg"&gt;GeoPDF plugin&lt;/a&gt;
to enable support for PDF format.&lt;/p&gt;
&lt;p&gt;Once installed, add the path to GDAL library to your
&lt;tt class="docutils literal"&gt;.bash_profile&lt;/tt&gt; file to be able to use the commands easily from the terminal.
Launch a Terminal and type in the following commands.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo &amp;#39;export PATH=/Library/Frameworks/GDAL.framework/Programs:$PATH&amp;#39; &amp;gt;&amp;gt; ~/.bash_profile
source ~/.bash_profile
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="linux"&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;p&gt;Installation instructions will vary with the distribution. On Ubuntu, you can
install the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;gdal-bin&lt;/span&gt;&lt;/tt&gt; package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install gdal-bin
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="verify-gdal-install"&gt;
&lt;h2&gt;Verify GDAL Install&lt;/h2&gt;
&lt;p&gt;If you already have GDAL installed, or just installed it, run the following
command in a terminal to verify that your GDAL installation is working and has
support for GeoPDF format.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gdalinfo --formats | grep -i pdf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you see Geospatial PDF printed in the output - you are all set. If you do
not get any output or get an error, your install is not correctly configured.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/geopdf1.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-data"&gt;
&lt;h2&gt;Get the Data&lt;/h2&gt;
&lt;p&gt;For this example, I chose to use &lt;a class="reference external" href="https://mapzen.com/data/metro-extracts"&gt;OpenStreetMap Metro Extracts&lt;/a&gt; from MapZen. Download the shapefiles
(OSM2PGSQL SHP format) for the city of your choice. I am using the extract for
Bangalore city in this example. Unzip the downloaded file to a folder on your
computer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="procedure"&gt;
&lt;h2&gt;Procedure&lt;/h2&gt;
&lt;p&gt;The process for creating a GeoPDF file from a bunch of shapefiles is the matter
of running a single &lt;tt class="docutils literal"&gt;gdal_translate&lt;/tt&gt; command. But we need to prepare the data
and figure out the correct command-line options. So follow along to understand
how you can arrive at the final command - or simply scroll to the end to see
the final command-line.&lt;/p&gt;
&lt;p&gt;latuviitta.org has a &lt;a class="reference external" href="http://latuviitta.org/documents/Geospatial_PDF_maps_from_OSM_with_GDAL.pdf"&gt;comprehensive overview&lt;/a&gt; of all the options available for
GeoPDF creation via GDAL. The follow steps are adapted and simplified version
of that guide.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;First step is to create a &lt;tt class="docutils literal"&gt;.vrt&lt;/tt&gt; file that can hold all the vector layers
we want in the PDF. If you just need a single layer in the PDF, you can skip
creating the &lt;tt class="docutils literal"&gt;.vrt&lt;/tt&gt; file and directly reference the layer in place of the
VRT. Note the &amp;lt;SrcSQL&amp;gt; tag in the VRT file. This is for filtering out all
features where the 'name' field is empty. You can leave that out or modify
to suit your dataset. Name this file &lt;tt class="docutils literal"&gt;osm.vrt&lt;/tt&gt; and save it on the same
folder with your data.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;OGRVRTDataSource&amp;gt;
    &amp;lt;OGRVRTLayer name=&amp;quot;roads&amp;quot;&amp;gt;
        &amp;lt;SrcDataSource&amp;gt;bengaluru_india_osm_line.shp&amp;lt;/SrcDataSource&amp;gt;
        &amp;lt;SrcLayer&amp;gt;bengaluru_india_osm_line&amp;lt;/SrcLayer&amp;gt;
        &amp;lt;SrcSQL dialect=&amp;quot;sqlite&amp;quot;&amp;gt;SELECT name, highway, geometry from bengaluru_india_osm_line where name is not NULL&amp;lt;/SrcSQL&amp;gt;
        &amp;lt;GeometryType&amp;gt;wkbLineString&amp;lt;/GeometryType&amp;gt;
        &amp;lt;LayerSRS&amp;gt;WGS84&amp;lt;/LayerSRS&amp;gt;
    &amp;lt;/OGRVRTLayer&amp;gt;
    &amp;lt;OGRVRTLayer name=&amp;quot;pois&amp;quot;&amp;gt;
        &amp;lt;SrcDataSource&amp;gt;bengaluru_india_osm_point.shp&amp;lt;/SrcDataSource&amp;gt;
        &amp;lt;SrcLayer&amp;gt;bengaluru_india_osm_point&amp;lt;/SrcLayer&amp;gt;
        &amp;lt;SrcSQL dialect=&amp;quot;sqlite&amp;quot;&amp;gt;SELECT name, geometry from bengaluru_india_osm_point where name is not NULL&amp;lt;/SrcSQL&amp;gt;
        &amp;lt;GeometryType&amp;gt;wkbPoint&amp;lt;/GeometryType&amp;gt;
        &amp;lt;LayerSRS&amp;gt;WGS84&amp;lt;/LayerSRS&amp;gt;
    &amp;lt;/OGRVRTLayer&amp;gt;
&amp;lt;/OGRVRTDataSource&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;GeoPDF is a raster format that can overlay
vectors on top. So we need a raster layer as the base. If you have some
satellite imagery or scanned raster for the area, you can use it as the
base layer, or we can create an empty raster for the extent of the vector
layer. &lt;tt class="docutils literal"&gt;ogrtindex&lt;/tt&gt; command creates a bounding box polygon from the given
input layers. &lt;tt class="docutils literal"&gt;gdal_rasterize&lt;/tt&gt; command then fills this polygon with the
given value and creates a raster. The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-tr&lt;/span&gt;&lt;/tt&gt; option specifies the pixel
resolution of the raster in degrees. You can tweak that to get the output
size you need. &lt;tt class="docutils literal"&gt;cd&lt;/tt&gt; to the directory where you have extracted the vector
layers and run the following commands.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd Users\Ujaval\Downloads\bengaluru_india.osm2pgsql-shapefiles

ogrtindex -accept _different_schemas extent.shp osm.vrt

gdal_rasterize -burn 255 -ot Byte -tr 0.0001 0.0001 extent.shp bangalore.tif
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/geopdf2.png" /&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Now we can convert the empty &lt;tt class="docutils literal"&gt;bangalore.tif&lt;/tt&gt; raster to a PDF - overlaying
the vector layers from the &lt;tt class="docutils literal"&gt;osm.vrt&lt;/tt&gt; file.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gdal_translate -of PDF -a_srs EPSG:4326 bangalore.tif bangalore.pdf -co OGR_DATASOURCE=osm.vrt -co OGR_DISPLAY_FIELD=&amp;quot;name&amp;quot;
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/geopdf3.png" /&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Once the conversion finishes, you can open the resulting &lt;tt class="docutils literal"&gt;bangalore.pdf&lt;/tt&gt;
file in any PDF viewer. Opening it in Adobe Acrobat viewer, you can see the
map data layers. You can browse the features in the layer panel, search for
any attribute value and zoom/pan the map.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" class="align-center" src="/images/geopdf4.png" /&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Another popular use of GeoPDF files is to use it as offline base maps using
programs such as &lt;a class="reference external" href="http://www.avenza.com/pdf-maps"&gt;Avenza PDF Maps&lt;/a&gt;.
Loading the &lt;tt class="docutils literal"&gt;bangalore.pdf&lt;/tt&gt; file on Avenza Maps on your mobile phone, you
can use the GPS to view your current location or trace a GPS route on top.
Search also works across layers in the PDF.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" class="align-center" src="/images/geopdf5.png" /&gt;
&lt;p&gt;You can download the sample &lt;a class="reference external" href="https://drive.google.com/open?id=0B0Xc7QoGul60eFRuTHVvUWRVZEE"&gt;bangalore.pdf&lt;/a&gt; Geospatial
PDF format file for exploring the format yourself.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Geo Data Processing with Mapshaper</title><link href="http://www.spatialthoughts.com/blog/gis/mapshaper-command-line/" rel="alternate"></link><published>2015-10-24T00:00:00+05:30</published><updated>2015-10-24T00:00:00+05:30</updated><author><name>Ujaval Gandhi</name></author><id>tag:www.spatialthoughts.com,2015-10-24:blog/gis/mapshaper-command-line/</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://mapshaper.org/"&gt;Mapshaper&lt;/a&gt; is a free and open-source tool that is
best known for fast and easy simplification. Other tools for simplification -
like QGIS or ogr2ogr - do not preserve topology while simplifying.  This means
you may get sliver polygons or missing intersections. Mapshaper performs
topologically-aware simplification and gives you much more control on the
process.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Other popular open-source tools, PostGIS and GRASS can do
topologically-aware simplifications as well.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;But Mapshaper is much more than a simplification tool. It is in active
development and has many more data processing and editing capabilities now. It
also has a command-line version of the tool which can be run from a terminal.
In this post, we will explore the command-line tool to carry out some complex
geoprocessing tasks.&lt;/p&gt;
&lt;div class="section" id="get-the-tools"&gt;
&lt;h2&gt;Get the Tools&lt;/h2&gt;
&lt;p&gt;Mapshaper is a &lt;a class="reference external" href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; application. &lt;a class="reference external" href="https://nodejs.org/en/download/"&gt;Download&lt;/a&gt; and install Node.js for your platform. You
will need the Node Package Manager (NPM) to install mapshaper,  so make sure it
is enabled while going through the installer.&lt;/p&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper1.png" /&gt;
&lt;p&gt;Once Node.js is installed, launch the Windows &lt;tt class="docutils literal"&gt;Command Prompt (cmd.exe)&lt;/tt&gt; and
run the following command to install mapshaper.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install -g mapshaper
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper2.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-data"&gt;
&lt;h2&gt;Get the Data&lt;/h2&gt;
&lt;p&gt;Review the data and problem statement from the &lt;a class="reference external" href="http://www.qgistutorials.com/en/docs/performing_table_joins.html"&gt;Performing Table Joins&lt;/a&gt;
tutorial. Download the Census Tracts shapefile &lt;tt class="docutils literal"&gt;tl_2013_06_tract.zip&lt;/tt&gt; and the
Population CSV &lt;tt class="docutils literal"&gt;ca_tracts_pop.csv&lt;/tt&gt;. Unzip the &lt;tt class="docutils literal"&gt;tl_2013_06_tract.zip&lt;/tt&gt; file
and extract it to a folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="procedure"&gt;
&lt;h2&gt;Procedure&lt;/h2&gt;
&lt;p&gt;Mapshaper command takes an input, an output and a sequence of commands to
execute. Each command is followed by options specific to that command. All
the commands and options are well documented at the &lt;a class="reference external" href="https://github.com/mbloch/mapshaper/wiki/Command-Reference"&gt;Mapshaper Wiki&lt;/a&gt;.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Let's start with simplification. We will take the census tracts shapefile
and simlpify it to reduce the number of verticies and the total size. The
command for simplification is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-simplify&lt;/span&gt;&lt;/tt&gt;. You can supply a percentage
value as an option to specify how aggressiveness of the simplification.
Another useful option is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;keep-shapes&lt;/span&gt;&lt;/tt&gt; which ensures that none of the
polygons from the input will get deleted. Run the following command. Make
sure you &lt;tt class="docutils literal"&gt;cd&lt;/tt&gt; to the directory where the data has been downloaded.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The percentage value in the -simplify command can be a little misleading.
The value indicates how many verticies to keep and not how many to remove.
So a lower value would result in MORE simplification.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mapshaper -i tl_2013_06_tract\tl_2013_06_tract.shp -simplify 20% keep-shapes -o output.shp
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper3.png" /&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Mapshaper can also do Table Joins. We can now join the population field
&lt;tt class="docutils literal"&gt;D001&lt;/tt&gt; from the &lt;tt class="docutils literal"&gt;ca_tracts_pop.csv&lt;/tt&gt; file. The join will match the fields
we specify as &lt;tt class="docutils literal"&gt;keys&lt;/tt&gt; and add it to the output file. For the join to work
correctly, we need to specify the field types in the CSV file. (Similar to
how a .csvt file is needed by QGIS). We can 'chain' the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-join&lt;/span&gt;&lt;/tt&gt; command
after the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-simplify&lt;/span&gt;&lt;/tt&gt; command to perform both the operation in a single
command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mapshaper -i tl_2013_06_tract\tl_2013_06_tract.shp -simplify 20% keep-shapes -join ca_tracts_pop.csv keys=GEOID,GEO.id2 field-types GEO.id2:str,D001:num -o output.shp
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper4.png" /&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Mapshaper can also dissolve features. In my testing, Mapshaper's dissolve
operation was many times faster than QGIS or GRASS. Let's add a
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-dissolve&lt;/span&gt;&lt;/tt&gt; command and merge all census tracts for a county. We can
also sum up the values of the &lt;tt class="docutils literal"&gt;D001&lt;/tt&gt; field to get the total population of
the county from the sum of individual census tracts.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mapshaper -i tl_2013_06_tract\tl_2013_06_tract.shp -simplify 20% keep-shapes -join ca_tracts_pop.csv keys=GEOID,GEO.id2 field-types GEO.id2:str,D001:num -dissolve COUNTYFP sum-fields D001 -o output.shp
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper5.png" /&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;The output format needed by many web apps is geojson or topojson. Mapshaper
can write the output in these formats as well. Let's add a
&lt;tt class="docutils literal"&gt;format=geojson&lt;/tt&gt; option to the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt;&lt;/tt&gt; command to write a geojson output.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mapshaper -i tl_2013_06_tract\tl_2013_06_tract.shp -simplify 20% keep-shapes -join ca_tracts_pop.csv keys=GEOID,GEO.id2 field-types GEO.id2:str,D001:num -dissolve COUNTYFP sum-fields D001 -o format=geojson output.geojson
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper6.png" /&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Finally, let's visualize our output. Go to &lt;a class="reference external" href="http://geojson.io"&gt;geojson.io&lt;/a&gt;
and upload the resulting &lt;tt class="docutils literal"&gt;output.geojson&lt;/tt&gt;. You will be able to visualize
the output shapes and their properties.&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="" class="align-center" src="/images/mapshaper7.png" /&gt;
&lt;p&gt;By now, you must have figured out that we have a very powerful tool on our
hands. In just a single line of command and just a few seconds of computing, we
did Simplification, Table Join, Dissolve and Format translation.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Spatial Joins on the Command Line</title><link href="http://www.spatialthoughts.com/blog/gis/ogr-spatial-join/" rel="alternate"></link><published>2015-07-19T00:00:00+05:30</published><updated>2015-07-19T00:00:00+05:30</updated><author><name>Ujaval Gandhi</name></author><id>tag:www.spatialthoughts.com,2015-07-19:blog/gis/ogr-spatial-join/</id><summary type="html">&lt;p&gt;GDAL and OGR libraries come with handy &lt;a class="reference external" href="http://www.gdal.org/ogr_utilities.html"&gt;command-line tools&lt;/a&gt;. These tools are quite powerful and
can save you a lot of effort if you know how to use them. Here I will show how
to use the &lt;a class="reference external" href="http://www.gdal.org/ogrinfo.html"&gt;ogrinfo&lt;/a&gt; and &lt;a class="reference external" href="http://www.gdal.org/ogr2ogr.html"&gt;ogr2ogr&lt;/a&gt; tools to perform spatial joins. A single
command can do complex operations on your spatial data and save you a lot of
clicking-around and data-munging in a GIS.&lt;/p&gt;
&lt;div class="section" id="get-the-tools"&gt;
&lt;h2&gt;Get the Tools&lt;/h2&gt;
&lt;p&gt;The best way to get the command-line tools on Windows is via the &lt;a class="reference external" href="http://trac.osgeo.org/osgeo4w/"&gt;OSGeo4W
Installer&lt;/a&gt;. If you are on Linux or Mac, see
&lt;a class="reference external" href="https://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries"&gt;these instructions&lt;/a&gt; to get the package
for your platform.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-data"&gt;
&lt;h2&gt;Get the Data&lt;/h2&gt;
&lt;p&gt;Review the data and problem statement from the &lt;a class="reference external" href="http://www.qgistutorials.com/en/docs/performing_spatial_joins.html"&gt;Performing Spatial Joins&lt;/a&gt;
tutorial. Download the Borough Boundaries and Nursing Homes shapefiles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="procedure"&gt;
&lt;h2&gt;Procedure&lt;/h2&gt;
&lt;p&gt;OGR command line tools accept only 1 input. But we have 2 inputs for the
spatial join. An easy way to fix this, is to use a &lt;a class="reference external" href="http://www.gdal.org/drv_vrt.html"&gt;VRT file&lt;/a&gt;. A VRT file allows us to specify multiple
inputs and pass them to the command-line tool as layers of a single input.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Unzip the input shapefiles in a single folder on your drive. Create a file
named &lt;tt class="docutils literal"&gt;input.vrt&lt;/tt&gt; in the same folder with the following content.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;OGRVRTDataSource&amp;gt;
    &amp;lt;OGRVRTLayer name=&amp;quot;boroughs&amp;quot;&amp;gt;
        &amp;lt;SrcDataSource&amp;gt;nybb.shp&amp;lt;/SrcDataSource&amp;gt;
        &amp;lt;SrcLayer&amp;gt;nybb&amp;lt;/SrcLayer&amp;gt;
    &amp;lt;/OGRVRTLayer&amp;gt;
    &amp;lt;OGRVRTLayer name=&amp;quot;nursinghomes&amp;quot;&amp;gt;
        &amp;lt;SrcDataSource&amp;gt;OEM_NursingHomes_001.shp&amp;lt;/SrcDataSource&amp;gt;
        &amp;lt;SrcLayer&amp;gt;OEM_NursingHomes_001&amp;lt;/SrcLayer&amp;gt;
    &amp;lt;/OGRVRTLayer&amp;gt;
&amp;lt;/OGRVRTDataSource&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Open the OSGeo4W shell and &lt;tt class="docutils literal"&gt;cd&lt;/tt&gt; to the directory containing the shapefiles
and the vrt file. Run the &lt;tt class="docutils literal"&gt;ogrinfo&lt;/tt&gt; command to check if the VRT file is
correct.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ogrinfo input.vrt
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/ogr-spatial1.png" /&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;OGR tools can run SQL queries on the input layers. We will use the
&lt;tt class="docutils literal"&gt;ST_INTERSECTS&lt;/tt&gt; function to find all nursing homes that intersect the
boundary of a borough and use the &lt;tt class="docutils literal"&gt;SUM&lt;/tt&gt; function to find the total nursing
home capacity of a borough. Run the following command.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ogrinfo -sql &amp;quot;SELECT b.BoroName, sum(n.Capacity) as total_capacity from
boroughs b, nursinghomes n WHERE ST_INTERSECTS(b.geometry, n.geometry) group
by b.BoroName&amp;quot; -dialect SQLITE input.vrt
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/ogr-spatial2.png" /&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;You can see that in a single command we got the results by doing a spatial
join that takes a lot of clicking around in a GIS environment. We can do a
reverse spatial join as well. We can join the name of the Borough to each
feature of the Nursing Homes layer. Using the &lt;tt class="docutils literal"&gt;ogr2ogr&lt;/tt&gt; tool we can write
out a shapefile from the resulting join. Note that we are adding a
&lt;tt class="docutils literal"&gt;geometry&lt;/tt&gt; column in the SELECT statement which results in a spatial
output. Run the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ogr2ogr -sql &amp;quot;SELECT n.Name, n.Capacity, n.geometry, b.BoroName from
boroughs b, nursinghomes n WHERE ST_INTERSECTS(b.geometry, n.geometry)&amp;quot;
-dialect SQLITE output.shp input.vrt
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/ogr-spatial3.png" /&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;Open the &lt;tt class="docutils literal"&gt;output.shp&lt;/tt&gt; in a GIS to verify that the new shapefile as
attributes joined from the intersecting borough. You can use &lt;tt class="docutils literal"&gt;ogrinfo&lt;/tt&gt;
command to check that as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ogrinfo -al output.shp
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="" class="align-center" src="/images/ogr-spatial4.png" /&gt;
&lt;/div&gt;
</summary></entry><entry><title>Calculate distance between a pair of lat/lon coordinates</title><link href="http://www.spatialthoughts.com/blog/gis/calculate-distance-spreadsheet/" rel="alternate"></link><published>2013-07-06T00:00:00+05:30</published><updated>2013-07-06T00:00:00+05:30</updated><author><name>Ujaval Gandhi</name></author><id>tag:www.spatialthoughts.com,2013-07-06:blog/gis/calculate-distance-spreadsheet/</id><summary type="html">&lt;p&gt;I recently had a need to calculate distance between a large number of
latitude/longitude coordinate pairs. There are many options available if you
want to import these in a GIS and run analysis. But there is a simpler and much
more accesible way if you aren't doing very high accuracy calculations.&lt;/p&gt;
&lt;p&gt;I decided to write a simple &lt;em&gt;Macro&lt;/em&gt; or &lt;em&gt;AppScript&lt;/em&gt; for Google Spreadsheets,
which uses the well-known &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Haversine_formula"&gt;Haversine formula&lt;/a&gt; to calculate distance
between 2 coordinates. Once the script is saved, the user of the spreadsheet
can use the function 'distance()' just the way one uses any of the built-in
functions.&lt;/p&gt;
&lt;img alt="forumla to calculate distance." src="/images/calculate-distance-spreadsheet.png" /&gt;
&lt;p&gt;You can give it a try. Just open &lt;a class="reference external" href="https://docs.google.com/spreadsheet/ccc?key=0AkXc7QoGul60dEc5Q01pTGNfa3N5YW5EWDNkOG9Ec3c&amp;amp;newcopy=true"&gt;this spreadsheet&lt;/a&gt;,
make a copy it and play with it as you like.&lt;/p&gt;
</summary></entry><entry><title>GIS Project Ideas for Thesis/ Dissertation/ Internship</title><link href="http://www.spatialthoughts.com/blog/gis/gis-project-ideas/" rel="alternate"></link><published>2010-10-25T00:00:00+05:30</published><updated>2010-10-25T00:00:00+05:30</updated><author><name>Ujaval Gandhi</name></author><id>tag:www.spatialthoughts.com,2010-10-25:blog/gis/gis-project-ideas/</id><summary type="html">&lt;p&gt;Many students have asked me for ideas on what topic they should choose for
their Thesis. I have debated this myself when I was a student. The ideal topic
would be the one that allows you to dive into a topic deeply as well as give
you some practical skills that will help you landing a job. Here are some
pointer that may help you make that decision.&lt;/p&gt;
&lt;div class="section" id="create-a-mashup"&gt;
&lt;h2&gt;Create a Mashup&lt;/h2&gt;
&lt;p&gt;A mashup is created by merging 2 or more sources of location data. There are
variety of free data available for you to experiment with and create unique
applications. Map mashups can be created using free tools such as Google Maps,
OpenLayers, GeoCommons Maker!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="develop-a-plug-in-for-an-open-source-gis"&gt;
&lt;h2&gt;Develop a plug-in for an open-source GIS&lt;/h2&gt;
&lt;p&gt;There is always a need to implement new features for open-source GIS software
like QGIS or MapWindowGIS. You can implement a cool feature or customize the
software for a particular domain. You will not only gain valuable experience
developing among the best programmers but also this will be an impressive
addition to your resume.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="work-with-an-ngo"&gt;
&lt;h2&gt;Work with an NGO&lt;/h2&gt;
&lt;p&gt;Most often students struggle to find good quality free GIS data which can be
used in interesting ways. Contact local NGOs to see if you can help them
analyze their location-specific data. Most NGOs collect some form of loation
data and your GIS skills can come in handy to them. The result of such a
project could be a unique GIS project that uses real on-the-ground data.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="build-a-campus-gis"&gt;
&lt;h2&gt;Build a Campus GIS&lt;/h2&gt;
&lt;p&gt;If you are at a university, a good project would be to put together a
web-accessible campus information system. You could model the campus buildings
in 3D, use satellite imagery via an API and overlay data about your campus.
Such a system could be attractive to the administrator as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="develop-a-vehicle-tracking-system"&gt;
&lt;h2&gt;Develop a vehicle tracking system&lt;/h2&gt;
&lt;p&gt;You can buy a cheap GPS receiver and implement a vehicle tracking system. This
will get you exposed to GPS/GSM protocols and get you hands-on knowledge that
many companies worldwide are looking for. Add your own twist to the traditional
tracking system by specializing it for walking directions, bus travel, toursut
sightseeing, navigating the blind etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="do-some-green-research"&gt;
&lt;h2&gt;Do some 'Green' research&lt;/h2&gt;
&lt;p&gt;Everyone is turning to green and sustainable technologies. As an intern or a
researcher, you could use your analytical skills to further the knowledge in
this area. Wind power, solar energy, climate change etc. are great topics for
GIS and Remote Sensing research.Analysing wind data to find best locations for
wind turbines or using remote sensing images to detect climate change are some
examples of projects. If you are a PhD student, you'll find these topics
complex and challenging enough for yor dissertation and you'll stand to recieve
grants or funds from governments as well.&lt;/p&gt;
&lt;p&gt;Do you have more ideas to share? What project are you thinking of? Please leave
a comment and help the GIS student community!&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>